#!/usr/bin/env bash

logfile=$HOME/Desktop/setapplog.txt
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>$logfile 2>&1
echo "Starting quick look for viewing log file (hi)"
qlmanage -p $logfile >/dev/null 2>&1 &

echo "Making necessary directories"
apps_root=$HOME/Applications
src_root=$HOME/src
mkdir -p $apps_root $src_root


# Install xcode command line tools (we need git)
# TODO: It might actually return 0 even when it fails.
# This is stupid, but so is xcode-select.
# Just need to test this on a computer without the tools installed.
echo "Checking for xcode-select"
if ! xcode-select -v; then
    touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
    PROD=$(softwareupdate -l |
      grep "\*.*Command Line" |
      head -n 1 | awk -F"*" '{print $2}' |
      sed -e 's/^ *//' |
      tr -d '\n')
    softwareupdate -i "$PROD" --verbose;
fi

echo "Cloning setup"
git clone https://github.com/ErikBoesen/setup $src_root/setup

echo "Setting up disguised iTerm2"
curl -Lo /tmp/iterm.zip https://iterm2.com/downloads/stable/latest
unzip -q /tmp/iterm.zip -d $apps_root/
git clone https://github.com/ErikBoesen/disguise $src_root/disguse
$src_root/disguise/disguise.sh $apps_root/iTerm.app it
osascript <<EOF
tell application "it"
	create window with default profile command "bash -c 'cd $src_root/setup';pwd;bash"
end tell
EOF
